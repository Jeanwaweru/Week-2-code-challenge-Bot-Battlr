{"ast":null,"code":"import _toConsumableArray from\"/home/jean/development/code/phase2/Week-2-Challenge-2-Bot-Battlr-021023/Challenge-2-Bot-Battlr/code-challenge/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import React,{useEffect}from\"react\";var botTypeClasses={Assault:\"icon military\",Defender:\"icon shield\",Support:\"icon plus circle\",Medic:\"icon ambulance\",Witch:\"icon magic\",Captain:\"icon star\"};function BotCard(_ref){var bot=_ref.bot,botsArmy=_ref.botsArmy,setBotsArmy=_ref.setBotsArmy,onDelete=_ref.onDelete,setOnDelete=_ref.setOnDelete;useEffect(function(){// Load bots army from local storage on component mount\nvar storedBotsArmy=JSON.parse(localStorage.getItem(\"botsArmy\"))||[];setBotsArmy(storedBotsArmy);});// Adding bot to army\nfunction handleAddArmy(bot){// Check if the bot is already in the army\nvar botExists=botsArmy.some(function(armyBot){return armyBot.id===bot.id;});// If the bot doesn't exist in the army, add it and update local storage\nif(!botExists){setBotsArmy([].concat(_toConsumableArray(botsArmy),[bot]));localStorage.setItem(\"botsArmy\",JSON.stringify([].concat(_toConsumableArray(botsArmy),[bot])));}else{console.log(\"Bot already exists in the army\");}}// Deleting bot\nfunction handleDelete(id){fetch(\"http://localhost:8002/bots\",{method:\"DELETE\"}).then(function(response){return response.json();}).then(function(){alert(\"Deleted Successfully\");setOnDelete(!onDelete);});}return/*#__PURE__*/_jsx(\"div\",{className:\"ui column\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"ui card\",children:[/*#__PURE__*/_jsxs(\"div\",{onClick:function onClick(){return handleAddArmy(bot);},children:[/*#__PURE__*/_jsx(\"div\",{className:\"image\",children:/*#__PURE__*/_jsx(\"img\",{alt:\"oh no!\",src:bot.avatar_url})}),/*#__PURE__*/_jsxs(\"div\",{className:\"content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"header\",children:[bot.name,/*#__PURE__*/_jsx(\"i\",{className:botTypeClasses[bot.bot_class]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"meta text-wrap\",children:/*#__PURE__*/_jsx(\"small\",{children:bot.catchphrase})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"extra content\",children:[/*#__PURE__*/_jsxs(\"span\",{children:[/*#__PURE__*/_jsx(\"i\",{className:\"icon heartbeat\"}),bot.health]}),/*#__PURE__*/_jsxs(\"span\",{children:[/*#__PURE__*/_jsx(\"i\",{className:\"icon lightning\"}),bot.damage]}),/*#__PURE__*/_jsxs(\"span\",{children:[/*#__PURE__*/_jsx(\"i\",{className:\"icon shield\"}),bot.armor]})]})]},bot.id),/*#__PURE__*/_jsx(\"div\",{className:\"ui center aligned segment basic\",children:/*#__PURE__*/_jsx(\"button\",{className:\"ui mini red button\",onClick:function onClick(){return handleDelete(bot.id);},children:\"x\"})})]})});}export default BotCard;","map":{"version":3,"sources":["/home/jean/development/code/phase2/Week-2-Challenge-2-Bot-Battlr-021023/Challenge-2-Bot-Battlr/code-challenge/src/components/BotCard.js"],"names":["React","useEffect","botTypeClasses","Assault","Defender","Support","Medic","Witch","Captain","BotCard","bot","botsArmy","setBotsArmy","onDelete","setOnDelete","storedBotsArmy","JSON","parse","localStorage","getItem","handleAddArmy","botExists","some","armyBot","id","setItem","stringify","console","log","handleDelete","fetch","method","then","response","json","alert","avatar_url","name","bot_class","catchphrase","health","damage","armor"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\n\nconst botTypeClasses = {\n  Assault: \"icon military\",\n  Defender: \"icon shield\",\n  Support: \"icon plus circle\",\n  Medic: \"icon ambulance\",\n  Witch: \"icon magic\",\n  Captain: \"icon star\",\n};\n\nfunction BotCard({ bot, botsArmy, setBotsArmy, onDelete, setOnDelete }) {\n  useEffect(() => {\n    // Load bots army from local storage on component mount\n    const storedBotsArmy = JSON.parse(localStorage.getItem(\"botsArmy\")) || [];\n    setBotsArmy(storedBotsArmy);\n  },);\n  \n// Adding bot to army\nfunction handleAddArmy(bot) {\n  // Check if the bot is already in the army\n  const botExists = botsArmy.some((armyBot) => armyBot.id === bot.id);\n  \n  // If the bot doesn't exist in the army, add it and update local storage\n  if (!botExists) {\n      setBotsArmy([...botsArmy, bot]);\n      localStorage.setItem(\"botsArmy\", JSON.stringify([...botsArmy, bot]));\n    } \n  else {\n    console.log(\"Bot already exists in the army\");\n    }\n}\n\n\n  // Deleting bot\n  function handleDelete(id) {\n    fetch(\"http://localhost:8002/bots\", {\n      method: \"DELETE\",\n    })\n      .then((response) => response.json())\n      .then(() => {\n        alert(\"Deleted Successfully\");\n        setOnDelete(!onDelete);\n      });\n  }\n\n  return (\n    <div className=\"ui column\">\n      <div className=\"ui card\">\n        <div key={bot.id} onClick={() => handleAddArmy(bot)}>\n          <div className=\"image\">\n            <img alt=\"oh no!\" src={bot.avatar_url} />\n          </div>\n          <div className=\"content\">\n            <div className=\"header\">\n              {bot.name}\n              <i className={botTypeClasses[bot.bot_class]} />\n            </div>\n            <div className=\"meta text-wrap\">\n              <small>{bot.catchphrase}</small>\n            </div>\n          </div>\n          <div className=\"extra content\">\n            <span>\n              <i className=\"icon heartbeat\" />\n              {bot.health}\n            </span>\n            <span>\n              <i className=\"icon lightning\" />\n              {bot.damage}\n            </span>\n            <span>\n              <i className=\"icon shield\" />\n              {bot.armor}\n            </span>\n          </div>\n        </div>\n        <div className=\"ui center aligned segment basic\">\n          <button\n            className=\"ui mini red button\"\n            onClick={() => handleDelete(bot.id)}\n          >\n            x\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default BotCard;"]},"metadata":{},"sourceType":"module"}