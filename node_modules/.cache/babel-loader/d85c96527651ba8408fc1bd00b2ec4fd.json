{"ast":null,"code":"import _slicedToArray from\"/home/jean/development/code/phase2/Week-2-Challenge-2-Bot-Battlr-021023/Challenge-2-Bot-Battlr/code-challenge/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import React,{useState,useEffect}from\"react\";import YourBotArmy from\"./YourBotArmy\";import BotCollection from\"./BotCollection\";function BotsPage(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),bots=_useState2[0],setBots=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),botsArmy=_useState4[0],setBotsArmy=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),onDelete=_useState6[0],setOnDelete=_useState6[1];useEffect(function(){// Load bots army from local storage\nvar storedBotsArmy=JSON.parse(localStorage.getItem(\"botsArmy\"))||[];setBotsArmy(storedBotsArmy);fetch(\"http://localhost:8002/bots\").then(function(res){return res.json();}).then(function(data){return setBots(data);}).catch(function(error){return console.error(\"Error fetching bots:\",error);});},[onDelete]);// Function to release a bot from the army\nfunction handleRelease(botIdToRelease){var updatedList=botsArmy.filter(function(bot){return bot.id!==botIdToRelease;});setBotsArmy(updatedList);// Save updated bots army to local storage\nlocalStorage.setItem(\"botsArmy\",JSON.stringify(updatedList));}return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(YourBotArmy,{botsArmy:botsArmy,onRelease:handleRelease}),/*#__PURE__*/_jsx(BotCollection,{bots:bots,botsArmy:botsArmy,setBotsArmy:setBotsArmy,onDelete:onDelete,setOnDelete:setOnDelete})]});}export default BotsPage;","map":{"version":3,"sources":["/home/jean/development/code/phase2/Week-2-Challenge-2-Bot-Battlr-021023/Challenge-2-Bot-Battlr/code-challenge/src/components/BotsPage.js"],"names":["React","useState","useEffect","YourBotArmy","BotCollection","BotsPage","bots","setBots","botsArmy","setBotsArmy","onDelete","setOnDelete","storedBotsArmy","JSON","parse","localStorage","getItem","fetch","then","res","json","data","catch","error","console","handleRelease","botIdToRelease","updatedList","filter","bot","id","setItem","stringify"],"mappings":"wRAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,CACA,MAAOC,CAAAA,aAAP,KAA0B,iBAA1B,CAEA,QAASC,CAAAA,QAAT,EAAoB,eACMJ,QAAQ,CAAC,EAAD,CADd,wCACXK,IADW,eACLC,OADK,8BAEcN,QAAQ,CAAC,EAAD,CAFtB,yCAEXO,QAFW,eAEDC,WAFC,8BAGcR,QAAQ,CAAC,KAAD,CAHtB,yCAGXS,QAHW,eAGDC,WAHC,eAKlBT,SAAS,CAAC,UAAM,CAEd;AACA,GAAMU,CAAAA,cAAc,CAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,GAAgD,EAAvE,CACAP,WAAW,CAACG,cAAD,CAAX,CAEAK,KAAK,CAAC,4BAAD,CAAL,CACGC,IADH,CACQ,SAACC,GAAD,QAASA,CAAAA,GAAG,CAACC,IAAJ,EAAT,EADR,EAEGF,IAFH,CAEQ,SAACG,IAAD,QAAUd,CAAAA,OAAO,CAACc,IAAD,CAAjB,EAFR,EAGGC,KAHH,CAGS,SAACC,KAAD,QAAWC,CAAAA,OAAO,CAACD,KAAR,CAAc,sBAAd,CAAsCA,KAAtC,CAAX,EAHT,EAID,CAVQ,CAUN,CAACb,QAAD,CAVM,CAAT,CAYA;AACA,QAASe,CAAAA,aAAT,CAAuBC,cAAvB,CAAuC,CACrC,GAAMC,CAAAA,WAAW,CAAGnB,QAAQ,CAACoB,MAAT,CAAgB,SAACC,GAAD,QAASA,CAAAA,GAAG,CAACC,EAAJ,GAAWJ,cAApB,EAAhB,CAApB,CACAjB,WAAW,CAACkB,WAAD,CAAX,CAEA;AACAZ,YAAY,CAACgB,OAAb,CAAqB,UAArB,CAAiClB,IAAI,CAACmB,SAAL,CAAeL,WAAf,CAAjC,EACD,CAED,mBACE,oCACE,KAAC,WAAD,EAAa,QAAQ,CAAEnB,QAAvB,CAAiC,SAAS,CAAEiB,aAA5C,EADF,cAEE,KAAC,aAAD,EACE,IAAI,CAAEnB,IADR,CAEE,QAAQ,CAAEE,QAFZ,CAGE,WAAW,CAAEC,WAHf,CAIE,QAAQ,CAAEC,QAJZ,CAKE,WAAW,CAAEC,WALf,EAFF,GADF,CAYD,CAED,cAAeN,CAAAA,QAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport YourBotArmy from \"./YourBotArmy\";\nimport BotCollection from \"./BotCollection\";\n\nfunction BotsPage() {\n  const [bots, setBots] = useState([]);\n  const [botsArmy, setBotsArmy] = useState([]);\n  const [onDelete, setOnDelete] = useState(false);\n\n  useEffect(() => {\n\n    // Load bots army from local storage\n    const storedBotsArmy = JSON.parse(localStorage.getItem(\"botsArmy\")) || [];\n    setBotsArmy(storedBotsArmy);\n\n    fetch(\"http://localhost:8002/bots\")\n      .then((res) => res.json())\n      .then((data) => setBots(data))\n      .catch((error) => console.error(\"Error fetching bots:\", error));\n  }, [onDelete]);\n\n  // Function to release a bot from the army\n  function handleRelease(botIdToRelease) {\n    const updatedList = botsArmy.filter((bot) => bot.id !== botIdToRelease);\n    setBotsArmy(updatedList);\n\n    // Save updated bots army to local storage\n    localStorage.setItem(\"botsArmy\", JSON.stringify(updatedList));\n  }\n\n  return (\n    <div>\n      <YourBotArmy botsArmy={botsArmy} onRelease={handleRelease} />\n      <BotCollection\n        bots={bots}\n        botsArmy={botsArmy}\n        setBotsArmy={setBotsArmy}\n        onDelete={onDelete}\n        setOnDelete={setOnDelete}\n      />\n    </div>\n  );\n}\n\nexport default BotsPage;"]},"metadata":{},"sourceType":"module"}