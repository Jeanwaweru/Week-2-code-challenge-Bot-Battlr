{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/jean/development/code/phase2/Week-2-Challenge-2-Bot-Battlr-021023/Challenge-2-Bot-Battlr/code-challenge/src/components/BotsPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport YourBotArmy from \"./YourBotArmy\";\nimport BotCollection from \"./BotCollection\";\n\nfunction BotsPage() {\n  _s();\n\n  const [bots, setBots] = useState([]);\n  const [botsArmy, setBotsArmy] = useState([]);\n  const [onDelete, setOnDelete] = useState(false);\n  useEffect(() => {\n    // Load bots army from local storage\n    const storedBotsArmy = JSON.parse(localStorage.getItem(\"botsArmy\")) || [];\n    setBotsArmy(storedBotsArmy);\n    fetch(\"http://localhost:8002/bots\").then(res => res.json()).then(data => setBots(data)).catch(error => console.error(\"Error fetching bots:\", error));\n  }, [onDelete]); // Function to release a bot from the army\n\n  function handleRelease(botIdToRelease) {\n    const updatedList = botsArmy.filter(bot => bot.id !== botIdToRelease);\n    setBotsArmy(updatedList); // Save updated bots army to local storage\n\n    localStorage.setItem(\"botsArmy\", JSON.stringify(updatedList));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(YourBotArmy, {\n      botsArmy: botsArmy,\n      onRelease: handleRelease\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BotCollection, {\n      bots: bots,\n      botsArmy: botsArmy,\n      setBotsArmy: setBotsArmy,\n      onDelete: onDelete,\n      setOnDelete: setOnDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(BotsPage, \"+NDsHcmS7xG3qEBZncvSwCLcvM4=\");\n\n_c = BotsPage;\nexport default BotsPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"BotsPage\");","map":{"version":3,"sources":["/home/jean/development/code/phase2/Week-2-Challenge-2-Bot-Battlr-021023/Challenge-2-Bot-Battlr/code-challenge/src/components/BotsPage.js"],"names":["React","useState","useEffect","YourBotArmy","BotCollection","BotsPage","bots","setBots","botsArmy","setBotsArmy","onDelete","setOnDelete","storedBotsArmy","JSON","parse","localStorage","getItem","fetch","then","res","json","data","catch","error","console","handleRelease","botIdToRelease","updatedList","filter","bot","id","setItem","stringify"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAClB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,KAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AAEd;AACA,UAAMU,cAAc,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,KAAgD,EAAvE;AACAP,IAAAA,WAAW,CAACG,cAAD,CAAX;AAEAK,IAAAA,KAAK,CAAC,4BAAD,CAAL,CACGC,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESG,IAAD,IAAUd,OAAO,CAACc,IAAD,CAFzB,EAGGC,KAHH,CAGUC,KAAD,IAAWC,OAAO,CAACD,KAAR,CAAc,sBAAd,EAAsCA,KAAtC,CAHpB;AAID,GAVQ,EAUN,CAACb,QAAD,CAVM,CAAT,CALkB,CAiBlB;;AACA,WAASe,aAAT,CAAuBC,cAAvB,EAAuC;AACrC,UAAMC,WAAW,GAAGnB,QAAQ,CAACoB,MAAT,CAAiBC,GAAD,IAASA,GAAG,CAACC,EAAJ,KAAWJ,cAApC,CAApB;AACAjB,IAAAA,WAAW,CAACkB,WAAD,CAAX,CAFqC,CAIrC;;AACAZ,IAAAA,YAAY,CAACgB,OAAb,CAAqB,UAArB,EAAiClB,IAAI,CAACmB,SAAL,CAAeL,WAAf,CAAjC;AACD;;AAED,sBACE;AAAA,4BACE,QAAC,WAAD;AAAa,MAAA,QAAQ,EAAEnB,QAAvB;AAAiC,MAAA,SAAS,EAAEiB;AAA5C;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,aAAD;AACE,MAAA,IAAI,EAAEnB,IADR;AAEE,MAAA,QAAQ,EAAEE,QAFZ;AAGE,MAAA,WAAW,EAAEC,WAHf;AAIE,MAAA,QAAQ,EAAEC,QAJZ;AAKE,MAAA,WAAW,EAAEC;AALf;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GAtCQN,Q;;KAAAA,Q;AAwCT,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport YourBotArmy from \"./YourBotArmy\";\nimport BotCollection from \"./BotCollection\";\n\nfunction BotsPage() {\n  const [bots, setBots] = useState([]);\n  const [botsArmy, setBotsArmy] = useState([]);\n  const [onDelete, setOnDelete] = useState(false);\n\n  useEffect(() => {\n\n    // Load bots army from local storage\n    const storedBotsArmy = JSON.parse(localStorage.getItem(\"botsArmy\")) || [];\n    setBotsArmy(storedBotsArmy);\n\n    fetch(\"http://localhost:8002/bots\")\n      .then((res) => res.json())\n      .then((data) => setBots(data))\n      .catch((error) => console.error(\"Error fetching bots:\", error));\n  }, [onDelete]);\n\n  // Function to release a bot from the army\n  function handleRelease(botIdToRelease) {\n    const updatedList = botsArmy.filter((bot) => bot.id !== botIdToRelease);\n    setBotsArmy(updatedList);\n\n    // Save updated bots army to local storage\n    localStorage.setItem(\"botsArmy\", JSON.stringify(updatedList));\n  }\n\n  return (\n    <div>\n      <YourBotArmy botsArmy={botsArmy} onRelease={handleRelease} />\n      <BotCollection\n        bots={bots}\n        botsArmy={botsArmy}\n        setBotsArmy={setBotsArmy}\n        onDelete={onDelete}\n        setOnDelete={setOnDelete}\n      />\n    </div>\n  );\n}\n\nexport default BotsPage;"]},"metadata":{},"sourceType":"module"}